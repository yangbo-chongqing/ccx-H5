<template>
    <div class="register">
        <MyHeader :title="title" :bg="true"/>
        <div class="topbox">
            <img class="imgbox" src="http://www.mlxc365.com/images/sxccx/icon/组21@2x 1.png" alt="">
        </div>
        <div class="all">
            <div class="logintitle">
                <span>验证信息</span>
                <span>欢迎使用</span>
            </div>
            <div class="formitem">
                <span v-if="one===1">用户名</span>
                <input type="number" οninput="if(value.length>11) value=value.slice(0,11)"  name="username" v-model="username" placeholder="手机号" @blur="inChange(1)" @focus="change(1)">
            </div>
            <div class="formitem bot">
                <span v-if="two===1" class="mima">验证码</span>
                <input type="text" name="code" v-model="code" placeholder="验证码" @blur="inChange(2)" @focus="change(2)" class="bott">
                <p @click="getCode()" v-if="send">点击获取</p>
                <p v-else>{{second}}s后获取</p>
            </div>
            <button class="form" @click="next()">下一步</button>
        </div>
    </div>
</template>
<script>
    import { getCode } from '@/apis';
    import { Toast } from 'vant';
    import MyHeader from "@/components/public/MyHeader";
    export default {
        name: "register",
        components: {
            MyHeader,
            Toast
        },
        data() {
            return {
                type: this.$route.query.type || null,
                username: null,
                code: null,
                one:0,
                two:0,
                captcha:null,//后台返的验证码
                send: true,//倒计时按钮
                second: 30,//倒计时时间
                timer: null,
                phone: null,//请求验证码用的手机号码
                title:"用户注册"
            }
        },
        methods: {
            change(val) {
                let determine = val
                switch (determine) {
                    case 1:
                        this.one = 1
                        break;
                    case 2:
                        this.two = 1
                        break;
                }
            },
            inChange(val) {
                // let num = val.detail.value
                let determine = val
                switch (determine) {
                    case 1:
                        if (!!this.username) {
                            this.one = 1
                        } else {
                            this.one = 0
                        }
                        break;
                    case 2:
                        if (!!this.code) {
                            this.two = 1
                        } else {
                            this.two = 0
                        }
                        break;
                }
            },
            //点击获取验证码
            getCode(){
                if(!(/^1[3456789]\d{9}$/.test(this.username))){
                    Toast.fail('请输入正确的手机号');
                }else{
                    this.sendcode()
                }
            },
            //发送验证码
            sendcode(){
                let data = {
                    mobile: this.username
                }
                getCode({
                    url: '/information/getSMSMsg',
                    data: data
                }).then(res=>{
                    if(res.status==200){
                        this.phone = this.username;
                        this.captcha = res.captcha;
                        this.timedwon()
                        Toast.success('验证码发送成功');
                    }else{
                        Toast.fail(res.msg);
                    }
                })
            },
            //倒计时方法
            timedwon(){
                let time = 30
                let timer = setInterval(()=>{
                    if(time==1){
                        clearInterval(this.timer)
                        this.send = true
                        time = 31
                    }
                    time = time - 1
                    this.second = time
                },1000)
                this.send = false
                this.timer = timer
            },
            //下一步
            next(){
                if(!this.username){
                    Toast.fail('请输入手机号码')
                    return
                }
                if(!this.code){
                    Toast.fail('请输入验证码')
                    return
                }
                if(this.username == this.phone && this.code == this.captcha){
                    if(this.type == 'reg'){//注册
                        this.$router.push({
                            path: '/numbers.html',
                            query: {
                                code: this.code,
                                phone: this.username
                            }
                        })
                    }else if(this.type == 'find'){//找回密码
                        //
                    }
                }else{
                    Toast.fail('验证码错误')
                }
            }
        },
        created() {
            this.title = this.type === 'find' ? '找回密码' : "用户注册"
        }
    }
</script>
<style lang="stylus" scoped>
    .register
        width 100%
        padding-top func(44)
        box-sizing border-box
        .topbox
            width 100%
            height func(274)
            background url("http://www.mlxc365.com/images/sxccx/icon/Frame 43.png") no-repeat
            background-size 100%
            position relative
            .imgbox
                width func(88)
                height func(88)
                position absolute
                bottom 0
                left func(142)
                top func(139)
        .all
            width func(258)
            margin-left func(58)
            .logintitle
                width 100%
                margin-bottom func(38)
                span:first-child
                    font-size func(18)
                    font-weight bold
                span:first-child
                    font-size func(24)
            .bot
                margin-top func(20)
                .bott
                    width func(173)
                    position relative
                p
                    display inline-block
                    width func(85)
                    height func(44)
                    background #6CB127
                    color #ffffff
                    text-align center
                    line-height func(44)
                    position absolute
            .formitem
                width 100%
                input
                    width func(258)
                    height func(44)
                    border func(1) solid #6CB127
                    padding-left func(16)
                    box-sizing border-box
                span
                    position absolute
                    top func(381)
                    left func(69)
                    background #ffffff
                    display block
                    font-size func(14)
                    color #6CB127
                    padding 0 func(10)
                    text-align center
                    z-index 2
                .mima
                    position absolute
                    top func(446)
            .member
                width 100%
                display flex
                justify-content space-between
                margin-top func(11)
                span
                    color #BFBFBF
                    font-size func(12)
            .form
                width func(258)
                height func(44)
                background #6CB127
                color #ffffff
                font-size func(16)
                margin-top func(27)
</style>
