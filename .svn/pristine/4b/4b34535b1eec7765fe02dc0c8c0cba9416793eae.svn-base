<template>
    <div class="login">
        <MyHeader :title="'登录'" :bg="true"/>
        <div class="topbox">
            <img class="imgbox" src="http://119.3.196.255:8094/file/icon/logosj.png" alt="">
        </div>
        <div class="all">
            <div class="logintitle">
                <span>登录</span>
                <span>欢迎使用村村享</span>
            </div>
            <div class="formitem">
                <span v-if="one===1">用户名</span>
                <input type="text" name="username" v-model="username" placeholder="手机号" @blur="inChange(1)" @focus="change(1)">
            </div>
            <div class="formitem bot">
                <span v-if="two===1" class="mima">密码</span>
                <input type="password" name="password" v-model="password" placeholder="密码" @blur="inChange(2)" @focus="change(2)">
            </div>
            <div class="member">
                <span class="iconfont">记住密码</span>
                <span @click="goRegister">注册账号</span>
            </div>
            <button formType="submit" class="form" @click="login" @keydown.enter="login">登录</button>
        </div>
        <div class="footers">
            <router-link to="/register.html?type=find"><span>找回密码 | </span></router-link>
            <router-link to="/register.html?type=reg"><span>注册账号</span></router-link>
        </div>
    </div>
</template>
<script>
    import md5 from "js-md5";
    import MyHeader from "@/components/public/MyHeader";
    import { login } from "../../apis";
    import { modifyArea , modifyUserInfo , modifyShowArea} from "../../store/actionTypes"
    export default {
        name: "login",
        components: {
            MyHeader
        },
        data() {
            return {
                username: "",
                password: "",
                one:0,
                two:0
            }
        },
        methods: {
            change(val) {
                let determine = val
                switch (determine) {
                    case 1:
                        this.one = 1
                        break;
                    case 2:
                        this.two = 1
                        break;
                }
            },
            inChange(val) {
                let determine = val
                switch (determine) {
                    case 1:
                        if (!!this.username) {
                            this.one = 1
                        } else {
                            this.one = 0
                        }
                        break;
                    case 2:
                        if (!!this.password) {
                            this.two = 1
                        } else {
                            this.two = 0
                        }
                        break;
                }
            },
            //登录
            login(){
                const username = this.username.trim();
                const password = this.password.trim();
                //验证
                if(username.length === 0) {
                    this.GToast({message:"请您输入手机号码"});
                    return false;
                }
                if(password.length === 0 ){
                    this.GToast({message:"请您输入密码"});
                    return false;
                }
                //发送请求
                const data = {
                    username,
                    password:md5(password)
                };

                login({url:"/login",data}).then(msg =>{
                    console.log(msg);
                    if(~~msg.code === 0){
                        msg = msg.data;
                        msg.plaintextPassword = password;
                        this.$store.dispatch(modifyUserInfo,msg);
                        const area = [];
                        if(msg.province){
                            area.push(msg.province);
                        }
                        if(msg.city){
                            area.push(msg.city);
                        }
                        if(msg.district){
                            area.push(msg.district);
                        }
                        if(msg.street){
                            area.push(msg.street);
                        }
                        if(msg.community){
                            area.push(msg.community);
                        }
                        this.$store.dispatch(modifyArea,area);
                        this.$store.dispatch(modifyShowArea,msg.deptName);
                        this.GToast({message:"登陆成功"});
                        if (window.sessionStorage.getItem("routerFlag")){
                            window.sessionStorage.removeItem("routerFlag");
                            this.$router.push("/index.html");
                        }else {
                            this.$router.go(-1);
                        }
                    }else if(~~msg.code === 1) {
                        this.GToast({message:msg.msg})
                    }else {
                        this.GToast({message:"账号或密码错误"})
                    }
                })
            },
            //去注册页面
            goRegister(){
                this.$router.push("/register.html")
            },
        },
        created() {
        }


    }
</script>
<style lang="stylus" scoped>
    .login
        width 100%
        padding-top func(44)
        min-height 100vh
        .topbox
            width 100%
            height func(274)
            background url("http://119.3.196.255:8094/file/icon//Group 183.png") no-repeat
            background-size 100%
            position relative
            .imgbox
                width func(88)
                height func(88)
                position absolute
                bottom 0
                left func(142)
                top func(139)
        .all
            width func(258)
            margin-left func(58)
            .logintitle
                width 100%
                margin-bottom func(38)
                span:first-child
                    font-size func(18)
                    font-weight bold
                span:first-child
                    font-size func(24)
            .bot
                margin-top func(20)
            .formitem
                width 100%
                input
                    width func(258)
                    height func(44)
                    border func(1) solid #6CB127
                    padding-left func(16)
                    box-sizing border-box
                span
                    position absolute
                    top func(381)
                    left func(69)
                    background #ffffff
                    display block
                    font-size func(14)
                    color #6CB127
                    padding 0 func(10)
                    text-align center
                .mima
                    position absolute
                    top func(446)
            .member
                width 100%
                display flex
                justify-content space-between
                margin-top func(11)
                span
                    color #BFBFBF
                    font-size func(12)
            .form
                width func(258)
                height func(44)
                background #6CB127
                color #ffffff
                font-size func(16)
                margin-top func(27)
        .footers
            width 100%
            margin-top func(40)
            margin-bottom func(40)
            bottom func(20)
            text-align center
            span
                font-size func(12)
                color #BFBFBF
</style>
