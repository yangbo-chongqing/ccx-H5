<template>
  <div id="Profile">
    <div class="banner">
      <div class="userName">
        <img
                :src="pic"
                alt
        />
        <div v-if="!isLogins">
          <router-link to="/login.html">
            <span>登录/</span>
          </router-link>
          <router-link to="/register.html?type=reg">
            <span>注册</span>
          </router-link>
        </div>
        <div v-else>
          <span v-if="!!userInfo.nickName">{{userInfo.nickName}}</span>
          <span v-else>{{userInfo.username}}</span>
        </div>
      </div>
    </div>
    <!--分组-->
    <div class="group">
      <div class="item" @click="onItem(1)">
        <div>
          <img :src=" baseImgUrl1 + 'dyfw_2.png'"/>
          <span>我的积分</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
      <div class="item" @click="onItem(2)">
        <div>
          <img
                  :src="baseImgUrl1 + 'ic_a6.png'"/>
          <span>党员缴费</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
      <div class="item thr" @click="onItem(3)">
        <div>
          <img :src="baseImgUrl1 +'ic_a4.png'"/>
          <span>一键报警</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
    </div>
    <div class="group">
      <div class="item" @click="open()">
        <div>
          <img :src="baseImgUrl1 +'ic_a1.png'" />
          <span>党员信息绑定</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
      <div class="item" @click="onItem(4)">
        <div>
          <img :src="baseImgUrl1 + 'ic_a3.png'"/>
          <span>个人资料</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
    </div>
    <div class="group thr">
      <div class="item" @click="onItem(5)">
        <div>
          <img
                  :src="baseImgUrl1 + 'zrdj.png'"/>
          <span>修改密码</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
      <div class="item" v-if="isLogins" @click="exit()">
        <div>
          <img
                  :src="baseImgUrl1 + 'ic_a5.png'"/>
          <span>账号退出</span>
        </div>
        <i class="iconfont">&#xe635;</i>
      </div>
    </div>
    <MyFooter :page-index="3" />

    <!-- 党员绑定弹窗 -->
    <div class="codes" v-if="showForm">
      <div class="blck" @click="open()"></div>
      <div class="formcontent">
        <div class="formtitle">
          <span>党员绑定</span>
          <!-- <i class="iconfont icon-guanbi" @click="handelForm(0)"></i> -->
        </div>
        <div class="formitem">
          <span v-if="one===1" class="one-span">姓名</span>
          <input
                  type="text"
                  @focus="change(1)"
                  @blur="inChange(1)"
                  v-model="name"
                  placeholder="请输入姓名"
          />
        </div>
        <div class="formitem botto">
          <span v-if="two===1" class="two-span">证件号码</span>
          <input
                  type="text"
                  @focus="change(2)"
                  @blur="inChange(2)"
                  v-model="number"
                  placeholder="请输入证件号"
          />
        </div>
        <div class="fontcolor">当前绑定的党员信息为{{orgname}}党员{{name}}</div>
        <!-- <div class="fontcolor" v-else>请输入正确的党员信息绑定</div> -->
        <div class="bnt">
          <span @click="binding">绑定</span>
          <!-- <span class="active">解绑</span> -->
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import MyFooter from "../../components/public/MyFooter";
  import { Dialog,Toast } from "vant";

  import {
    modifyArea,
    modifyShowArea,
    modifyUserInfo
  } from "../../store/actionTypes";
  import { logout, checkpart,bindingParty } from "../../apis";
  export default {
    name: "Profile",
    components: {
      MyFooter,
      Dialog,
      Toast
    },
    data() {
      return {
        isLogins: false, //mixins已定义，不要重新定义 login
        userInfo: null,
        showForm: false,
        name: null,
        number: null,
        one: 0,
        two: 0,
        orgname: null,
        idcard: null,
        pic:require("../../assets/img/noImg.png"),
        baseImgUrl1 : "http://www.mlxc365.com/images/sxccx/icon/"
      };
    },
    created() {
      this.checkLogin(); //检查登录状态
    },
    methods: {
      //检查登录状态
      checkLogin() {
        let userInfo = JSON.parse(sessionStorage.getItem("userInfo")) || "";
        if (!!userInfo.userId) {
          this.isLogins = true;
          this.userInfo = userInfo;
          this.orgname = userInfo.partyMember ? userInfo.partyMember.deptName : "";
          this.name = userInfo.partyMember ? userInfo.partyMember.mebName : "";
          this.number = userInfo.partyMember ? userInfo.partyMember.mebCard : "";
          this.pic=userInfo.picId;
        } else {
          this.isLogins = false;
        }
      },
      change(val) {
        let determine = val;
        switch (determine) {
          case 1:
            console.log(determine);
            this.one = 1;
            break;
          case 2:
            this.two = 1;
            break;
        }
      },
      inChange(val) {
        let determine = val;
        switch (determine) {
          case 1:
            if (!!this.name) {
              this.one = 1;
            } else {
              this.one = 0;
            }
            break;
          case 2:
            if (!!this.number) {
              this.two = 1;
            } else {
              this.two = 0;
            }
            break;
        }
      },
      //打开党员绑定弹框
      open() {
        if(!this.isLogins){
          Dialog.confirm({
            title: "温馨提示",
            message: "您还没有登录，是否前往登录页面？"
          }).then(() => {
            this.$router.push("/login.html");
          }).catch(() => {});
        }else{
          this.showForm = !this.showForm;
        }
      },

      //点击绑定
      binding() {
        let reg = /^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|[xX])$/;
        if (!this.name) {
          Toast('姓名不能为空！');

          return;
        }
        if (!this.number) {
          Toast('证件号码不能为空！');
          return;
        }
        if (!reg.test(this.number)) {
          Toast('证件号码错误！');

          return;
        }
        let data = {
          popName: this.name,
          popCard: this.number
        };

        bindingParty({
          url:"/fun/partyMember/bindingMember",
          data:data
        }).then(res=>{
          console.log(res)
          if(res.code==200){
            Toast("绑定成功！");
            this.showForm=false;

          }else{
            Toast(res.msg);
          }
        })
        .catch(() => {});
    },
    //点击选项
    onItem(e) {
      if (!this.isLogins) {
        Dialog.confirm({
          title: "温馨提示",
          message: "您还没有登录，是否前往登录页面？"
        }).then(() => {
          this.$router.push("/login.html");
        }).catch(() => {});
      } else {
        switch (e) {
          case 1:
            this.$router.push("/integral.html");
            break;
          case 2:
            this.$router.push("/Pay.html");
            break;
          case 3:
            this.$router.push("/Police.html");
            break;
          case 4:
            this.$router.push("/personalData.html");
            break;
          case 5:
            this.$router.push("/Forgetpwd.html");
            break;
        }
      }
      //检查是否是党员
      // checkparts(){
      //     checkpart({
      //         url:'/fun/partyMember/isMember'
      //     }).then(res=>{

      //     })
      // }
    }
    }
  };
</script>

<style scoped lang="stylus">
  #Profile {
    width: 100%;
    background-color: #fff;
    box-sizing: border-box;
    padding-bottom: func(49);
    min-height 100vh
    .banner {
      width: 100%;
      height: func(188);
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(to bottom, #11eeaa, #8fe065);

      .userName {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;

        img {
          width: func(80);
          height: func(80);
          border-radius: 50%;
          margin-bottom: func(10);
        }

        span {
          color: #fff;
        }
      }
    }

    .thr {
      border-bottom: 0;
    }

    .group {
      width: 100%;
      border-bottom: func(8) solid #f5f5f5;

      .item {
        width: 100%;
        height: func(56);
        display: flex;
        justify-content: space-between;
        box-sizing: border-box;
        padding: 0 func(10);
        border-bottom: func(1) solid #e3e3e3;
        align-items: center;

        div {
          height: 100%;
          display: flex;
          align-items: center;

          img {
            width: func(36);
            height: func(36);
            margin-right: func(8);
          }
        }
      }
    }

    .codes {
      .blck {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        background: #000000;
        opacity: 0.5;
        z-index: 1000;
      }

      .formcontent {
        width: func(312);
        height: func(398);
        position: fixed;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        margin: auto;
        z-index: 1001;
        background: #ffffff;
        border-radius: func(14);
        padding: 0 func(27);
        padding-top: func(42);
        box-sizing: border-box;

        .formtitle {
          width: 100%;
          text-align: center;

          span {
            color: #6CB127;
            font-size: func(14);
          }
        }

        .formitem {
          width: 100%;
          height: func(44);
          border: 1px solid #6CB127;
          border-radius: func(4);
          margin-top: func(40);
          position: relative;
          box-sizing: border-box;
          padding: 0 func(11);

          input {
            box-sizing: border-box;
            width: 100%;
            height: 100%;
            font-size: func(14);
            border: none;
          }

          span {
            position: absolute;
            color: #6CB127;
            font-size: func(14);
            top: func(-7);
            left: func(10);
            display: block;
            background: #ffffff;
            height: func(14);
            line-height: func(14);
            padding: 0 func(3);
          }
        }

        .fontcolor {
          color: #6CB127;
          font-size: func(14);
          margin-top: func(18);
        }

        .bnt {
          width: 100%;
          text-align: center;
          position: absolute;
          bottom: func(48);
          left: 0;

          span {
            display: inline-block;
            width: func(100);
            line-height: func(40);
            border-radius: func(20);
            text-align: center;
            color: #ffffff;
            background: #6CB127;
            font-size: func(16);
          }

          span.active {
            border: 1px solid #6CB127;
            color: #6CB127;
            background: #fff;
          }
        }
      }
    }
  }
</style>
