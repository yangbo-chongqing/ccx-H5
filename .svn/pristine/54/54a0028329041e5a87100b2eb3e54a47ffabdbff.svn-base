<template>
    <div id="PartyBuildDynamics">
        <MyHeader :title="'党建要闻'"/>
        <div id="Options">
            <div class="rightTitle">
                <ul>
                    <li :class="{active : flag === 0 }" @click="toggleFlag(0)">党务</li>
                    <li :class="{active : flag === 1  }" @click="toggleFlag(1)">政务</li>
                    <li :class="{active : flag === 2  }" @click="toggleFlag(2)">村务</li>
                </ul>
            </div>
        </div>
        <ul>
            <li v-for="(item , index) in newsList" :key="index">
                <NewsList v-if="item.showImg" :news="item"/>
                <textList v-else :news="item"/>
            </li>
        </ul>
    </div>
</template>

<script>
    import MyHeader from "../components/public/MyHeader";
    import NewsList from "../components/public/NewsList";
    import textList from "@/components/public/textList";
    import { getNewsClass} from "../apis";
    export default {
        name: "PartyBuildDynamics",
        data() {
            return {
                flag : 0,
                active: 2,
                news_type: null, // 32 村务 19 党务 33 政务
                newsList:null
            }
        },
        methods: {
            getNewsClass(news_type = 19){
                if(this.news_type){
                    news_type = this.news_type;
                }

                const data = {
                    pageSize:10,
                    pageCurrent:1,
                    news_type
                }
                getNewsClass({
                    data,
                    currentObject:this
                }).then(msg => {
                    if(~~msg.code === 1 && ~~msg.status === 200){
                        msg = msg.data.list;
                        // 32 村务 19 党务 33 政务
                        if(news_type === 32){
                            msg.forEach(item => {
                                if(item.contentPic !== "null"){
                                    item.showImg = item.contentPic.split(",")[0];
                                    item.typeName = "村务"
                                }
                            })
                        }
                        if(news_type === 33){
                            msg.forEach(item => {
                                if(item.contentPic !== "null"){
                                    item.showImg = item.contentPic.split(",")[0];
                                    item.typeName = "政务"
                                }
                            })
                        }
                        if(news_type === 19){
                            msg.forEach(item => {
                                if(item.contentPic !== "null" ){
                                    item.showImg = item.contentPic.split(",")[0];
                                    item.typeName = "党务"
                                }
                            })
                        }
                        this.newsList = msg
                    }else {
                        //获取失败
                        this.GToast({message:"获取新闻失败"});
                    }
                })
            },
            toggleFlag(flag){
                switch (flag) {
                    case 0:
                        this.news_type = 19;
                        break;
                    case 1:
                        this.news_type = 33;
                        break;
                    default :
                        this.news_type = 32;
                }
                this.flag = flag;
                this.getNewsClass();
            }
        },
        components: {
            MyHeader,
            NewsList,
            textList
        },
        created() {
            this.getNewsClass()
        },
    }
</script>

<style scoped lang="stylus">
#PartyBuildDynamics {
    width 100%
    min-height 100vh
    box-sizing  border-box;
    padding-top 2rem;
    > img {
        width:100%;
    }
}
    #Options
        width: 100%
        height:54px
        display flex
        align-items center
        box-sizing border-box
        padding: 0 func(10)
        padding-bottom: func(5)
        border-bottom: func(1) solid #e3e3e3
        .rightTitle
            width 100%;
            height func(44)
            display flex
            justify-content flex-end
            ul
                width :100%
                height:func(44)
                display flex
                align-items center
                justify-content: space-around
                li
                    padding 0 func(10)
                    font-size func(14)
                    height func(33)
                    display flex
                    align-items center
                    justify-content center
                    box-sizing border-box
                    color #8A8A8A
                    position: relative
                    &::after
                        position: absolute
                        content ""
                        width: 50%
                        height:func(2)
                        background-color: #4bb344
                        bottom 10%
                        opacity 0
                        transition all .2s;
                    &.active
                        color #4bb344;
                        &::after
                            opacity 1


</style>
