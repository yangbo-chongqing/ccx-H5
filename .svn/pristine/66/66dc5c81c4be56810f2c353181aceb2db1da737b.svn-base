<template>
    <div id="Estate">
        <MyHeader title="产业富村"/>
        <img src="../../assets/img/estate/banner.png" />
        <Tools :toolsList="toolsList"/>
        <div class="line" />
        <Options :optionFlag="optionFlag" :modifyFlag="modifyFlag"/>
        <GoodsList :optionFlag="optionFlag" v-for="item in goodsList" :key="item.create_date" :goods = "item"/>
        <img src="../../assets/img/noData.png" alt="" v-show="!goodsList.length">
    </div>
</template>

<script>
    import MyHeader from "../../components/public/MyHeader";
    import Tools from "../../components/estate/Tools";
    import GoodsList from "../../components/estate/GoodsList";
    import Options from "../../components/estate/Options";
    import { market } from "../../apis";
    export default {
        name: "Estate",
        data() {
            return {
                toolsList:[
                    {title: "产业地图" , src:require("../../assets/img/noImg.png") , pageLike:"/"},
                    {title: "集体经济" , src:require("../../assets/img/noImg.png") , pageLike:"/"},
                    {title: "一村一品" , src:require("../../assets/img/noImg.png") , pageLike:"/"},
                    {title: "农机服务" , src:require("../../assets/img/noImg.png") , pageLike:"/"}
                    ],
                optionFlag:0,
                goodsList:[],

            }
        },
        methods: {
            //修改选项标识
            modifyFlag(flag){
                //0 === 出售 1 ===需求
                this.optionFlag = flag;
                const data = flag === 0 ? {demand_type : '出售'} : {demand_type : '需求'};
                market({data , currentObject:this}).then(msg => {
                    if(~~msg.code === 0 && ~~msg.status === 200){
                        msg = msg.data.list;
                        this.goodsList = msg
                    }else if(~~msg.code === 0 && ~~msg.status === 400){
                        this.goodsList = []
                        this.GToast({message : "暂无数据"})
                    }else {
                        this.GToast({message : "获取失败"})
                    }
                }).catch(err =>{
                    this.GToast({message : "网络错误"})
                })
            }
        },
        components: {
            MyHeader,
            Tools,
            GoodsList,
            Options
        },

        created() {

        },
        mounted() {
            this.modifyFlag(0)
        },
        filters: {},
        computed: {},
        watch: {}
    }

</script>

<style scoped lang="stylus">
    #Estate {
        width 100%
        box-sizing border-box
        padding-top:func(44)
        min-height 100vh
        > img {
            max-width 100%
            display block
            margin 0 auto
        }
        > .line {
            width 100%
            height func(8)
            background-color: #f8f8f8
        }
    }
</style>
